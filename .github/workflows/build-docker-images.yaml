name: Build microservice

on:
  workflow_dispatch:

jobs:
  build-books:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: BookMicroservice/
    steps:
    - uses: actions/checkout@v2
    - name: Add hosts to /etc/hosts
      run: |
        sudo echo "127.0.0.1 books-mysql" | sudo tee -a /etc/hosts
    - name: Get branch
      id: get_branch
      run: echo ::set-output name=BRANCH::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Get the commit SHA
      id: get_commit_sha
      run: echo ::set-output name=COMMIT_SHA::$(git rev-parse --short "$GITHUB_SHA")
    - name: Build and push Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        path: BookMicroservice/
        dockerfile: BookMicroservice/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/book
        tags: ${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}, latest
        build_args: |
          TAG=${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}
  build-customers:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: CustomerMicroservice/
    steps:
    - uses: actions/checkout@v2
    - name: Add hosts to /etc/hosts
      run: |
        sudo echo "127.0.0.1 customers-mysql" | sudo tee -a /etc/hosts
    - name: Get branch
      id: get_branch
      run: echo ::set-output name=BRANCH::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Get the commit SHA
      id: get_commit_sha
      run: echo ::set-output name=COMMIT_SHA::$(git rev-parse --short "$GITHUB_SHA")
    - name: Build and push Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        path: CustomerMicroservice/
        dockerfile: CustomerMicroservice/CustomerMicroservice/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/customer
        tags: ${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}, latest
        build_args: |
          TAG=${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}
  build-borrows:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: BorrowingMicroservice/
    steps:
    - uses: actions/checkout@v2
    - name: Get branch
      id: get_branch
      run: echo ::set-output name=BRANCH::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Get the commit SHA
      id: get_commit_sha
      run: echo ::set-output name=COMMIT_SHA::$(git rev-parse --short "$GITHUB_SHA")
    - name: Build and push Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        path: BorrowingMicroservice/
        dockerfile: BorrowingMicroservice/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/borrow
        tags: ${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}, latest
        build_args: |
          TAG=${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}
  build-aggregator:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: AggregatorMicroservice/
    steps:
    - uses: actions/checkout@v2
    - name: Get branch
      id: get_branch
      run: echo ::set-output name=BRANCH::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Get the commit SHA
      id: get_commit_sha
      run: echo ::set-output name=COMMIT_SHA::$(git rev-parse --short "$GITHUB_SHA")
    - name: Build and push Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        path: AggregatorMicroservice/
        dockerfile: AggregatorMicroservice/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/aggregator
        tags: ${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}, latest
        build_args: |
          TAG=${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}
  build-notification:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: NotificationMicroservice/
    steps:
    - uses: actions/checkout@v2
    - name: Add hosts to /etc/hosts
      run: |
        sudo echo "127.0.0.1 notification-rabbit" | sudo tee -a /etc/hosts
    - name: Get branch
      id: get_branch
      run: echo ::set-output name=BRANCH::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Get the commit SHA
      id: get_commit_sha
      run: echo ::set-output name=COMMIT_SHA::$(git rev-parse --short "$GITHUB_SHA")
    - name: Build and push Docker image
      uses: docker/build-push-action@v1.1.0
      with:
        path: NotificationMicroservice/
        dockerfile: NotificationMicroservice/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ secrets.DOCKER_USERNAME }}/notification
        tags: ${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}, latest
        build_args: |
          TAG=${{ steps.get_commit_sha.outputs.COMMIT_SHA }}-${{ steps.get_branch.outputs.BRANCH }}